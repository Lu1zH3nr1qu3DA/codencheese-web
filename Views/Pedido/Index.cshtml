@model IEnumerable<WebHamburgueria.Models.Pedido>

@{
    ViewBag.Title = "Pedidos";

    // Agrupar os pedidos por status
    var andamento = Model.Where(p => p.Status == "A").ToList();
    var andamentoHoje = Model.Where(p => p.DataPedido >= DateTime.Today).ToList();
    var finalizado = Model.Where(p => p.Status == "F").ToList();
    var finalizadoHoje = Model.Where(p => p.DataPedido >= DateTime.Today).ToList();
    var cancelado = Model.Where(p => p.Status == "C").ToList();
    var canceladoHoje = Model.Where(p => p.DataPedido >= DateTime.Today).ToList();
}

<div class="container my-5">

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold">Pedidos de Hoje</h2>
        @Html.ActionLink("Criar Novo", "Create", null, new { @class = "btn btn-outline-primary" })
    </div>

    @*<h2 class="mb-4">Pedidos de Hoje</h2>*@

    <div class="row">
        <!-- Coluna Andamento -->
        <div class="col-md-4">
            <div class="kanban-column">
                <div class="kanban-header bg-primary p-2 rounded-top">
                    Andamento (@andamento.Count)
                </div>
                <div class="kanban-body p-2">
                    @foreach (var pedido in andamento)
                    {
                        <div class="card mb-2">
                            <div class="card-body">
                                <h5 class="card-title">Pedido #@pedido.Id</h5>
                                <p class="card-text">
                                    Total: @pedido.Total.ToString("C")<br />
                                    Hora: @pedido.DataPedido.ToShortTimeString()
                                </p>
                                <a href="@Url.Action("Details", "Pedido", new { id = pedido.Id })" class="btn btn-sm btn-primary">Detalhes</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <!-- Coluna Finalizado -->
        <div class="col-md-4">
            <div class="kanban-column">
                <div class="kanban-header bg-success p-2 rounded-top">
                    Finalizado (@finalizado.Count)
                </div>
                <div class="kanban-body p-2">
                    @foreach (var pedido in finalizado)
                    {
                        <div class="card mb-2">
                            <div class="card-body">
                                <h5 class="card-title">Pedido #@pedido.Id</h5>
                                <p class="card-text">
                                    Total: @pedido.Total.ToString("C")<br />
                                    Hora: @pedido.DataPedido.ToShortTimeString()
                                </p>
                                <a href="@Url.Action("Details", "Pedido", new { id = pedido.Id })" class="btn btn-sm btn-primary">Detalhes</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <!-- Coluna Cancelado -->
        <div class="col-md-4">
            <div class="kanban-column">
                <div class="kanban-header bg-danger p-2 rounded-top">
                    Cancelado (@cancelado.Count)
                </div>
                <div class="kanban-body p-2">
                    @foreach (var pedido in cancelado)
                    {
                        <div class="card mb-2">
                            <div class="card-body">
                                <h5 class="card-title">Pedido #@pedido.Id</h5>
                                <p class="card-text">
                                    Total: @pedido.Total.ToString("C")<br />
                                    Hora: @pedido.DataPedido.ToShortTimeString()
                                </p>
                                <a href="@Url.Action("Details", "Pedido", new { id = pedido.Id })" class="btn btn-sm btn-primary">Detalhes</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Estilos para o Kanban */
    .kanban-column {
        border: 1px solid;
        border-radius: 0.5rem;
        margin-bottom: 1em;
    }

    .kanban-header {
        font-weight: bold;
        border-bottom: 1px solid;
    }

    .kanban-body {
        /* Define um tamanho mínimo e permite rolagem vertical se necessário */
        min-height: 300px;
        max-height: 600px;
        overflow-y: auto;
    }
</style>

<div class="container my-5" style="padding-bottom: 1em;">
    <!-- Cabeçalho com título e botão "Criar Novo" -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold">Todos os Pedidos</h2>
    </div>

    <!-- Card que envolve a tabela -->
    <div class="card shadow-sm rounded-table">
        <div class="card-body p-0 rounded-table">
            <div class="table-responsive">
                <table class="table table-striped table-hover mb-0 rounded-table">
                    <thead class="table-dark">
                        <tr>
                            <th>@Html.DisplayName("ID")</th>
                            <th>@Html.DisplayName("Status")</th>
                            <th>@Html.DisplayName("Método de Pagamento")</th>
                            <th>@Html.DisplayName("Total")</th>
                            <th>@Html.DisplayName("Data do Pedido")</th>
                            <th style="text-align: center;">Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr style="height: 100px;">
                                <td class="align-middle">@Html.DisplayFor(modelItem => item.Id)</td>
                                <td class="align-middle">@(item.Status == "A" ? "Andamento" : item.Status == "F" ? "Finalizado" : item.Status == "C" ? "Cancelado" : "Inválido")</td>
                                <td class="align-middle">@(item.MetPag == "R" ? "Dinheiro" : item.MetPag == "P" ? "Pix" : item.MetPag == "C" ? "Crédito" : item.MetPag == "D" ? "Débito" : "Inválido")</td>
                                <td class="align-middle">@Html.DisplayFor(modelItem => item.Total)</td>
                                <td class="align-middle">@Html.DisplayFor(modelItem => item.DataPedido)</td>
                                <td class="align-middle" style="text-align: center;">
                                    @Html.ActionLink("Detalhes", "Details", new { id = item.Id }, new { @class = "btn btn-primary btn-sm me-1 action-button" })
                                    @Html.ActionLink("Cancelar", "Cancel", new { id = item.Id }, new { @class = "btn btn-danger btn-sm action-button" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<style>
    .rounded-table {
        border-collapse: separate;
        border-spacing: 0;
        border-radius: 0.5rem; /* Ajuste o valor conforme necessário */
        overflow: hidden;
    }

    /* Oculta os botões por padrão */
    .action-button {
        opacity: 0;
        transition: opacity 0.3s ease-in-out;
    }
    /* Quando o mouse estiver sobre a linha, exibe os botões */
    table tbody tr:hover .action-button {
        opacity: 1;
    }
</style>
