@model WebHamburgueria.Viewmodel.ProdutoViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Editar</h2>

@using (Html.BeginForm("Edit", "Produto", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Produto</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Preco, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Preco, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Preco, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Ingredientes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ingredientes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ingredientes, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.Foto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Foto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Foto, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-10">
            @if (Model.Foto != null)
            {
                var base64 = Convert.ToBase64String(Model.Foto);
                var imgSrc = String.Format("data:image/png;base64,{0}", base64);
                <img id="produto-imagem" src='@imgSrc' style="max-width:100px; max-height:100px;" />
            }
            else
            {
                <img id="produto-imagem" src="#" alt="Pré-visualização da imagem" style="max-width:100px; max-height:100px; display:none;" />
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImageUpload, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.ImageUpload, new { type = "file", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ImageUpload, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.DropDownListFor(model => model.Tipo,
                new List<SelectListItem>
                {
                    new SelectListItem { Text = "Lanche", Value = "L" },
                    new SelectListItem { Text = "Bebida", Value = "B" },
                    new SelectListItem { Text = "Acompanhamento", Value = "A" }
                }, new { @class = "btn btn-secondary dropdown-toggle", @type = "button" })
        @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "dropdown-menu" })
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Voltar para Lista", "Index", new {  }, new { @class = "btn btn-danger" })
</div>

<script>
    function updateImagePreview(input) {
        const imgPreview = document.getElementById('produto-imagem');

        if (input.files && input.files[0]) {
            const reader = new FileReader();

            reader.onload = function (e) {
                imgPreview.src = e.target.result; // Atualiza a fonte da imagem
                imgPreview.style.display = 'block'; // Mostra a imagem caso esteja oculta
            };

            reader.readAsDataURL(input.files[0]); // Converte a imagem para Base64
        } else {
            imgPreview.src = "#";
            imgPreview.style.display = 'none'; // Oculta a imagem caso nenhum arquivo seja selecionado
        }
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
