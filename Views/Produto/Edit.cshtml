@model WebHamburgueria.Viewmodel.ProdutoViewModel
@{
    ViewBag.Title = "Editar Produto";
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-maskmoney/3.0.2/jquery.maskMoney.min.js"></script>

<!-- Seção com fundo (opcional: você pode definir uma cor ou imagem de fundo) -->
<section style="background: url('https: //cdn.pixabay.com/photo/2015/06/24/15/45/burger-820876_1280.jpg') no-repeat center center; background-size: cover; padding-bottom: 1em;">
    <div class="container h-100 d-flex justify-content-center align-items-center">
        <div class="card shadow-lg" style="width: 600px; border-radius: 1rem;">
            <div class="card-body p-5">
                <h3 class="card-title text-center mb-4">Editar Produto</h3>
                @using (Html.BeginForm("Edit", "Produto", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Id)

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Nome, new { @class = "form-label" })
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { id = "txt-name", @class = "form-control", placeholder = "Digite o nome do produto", maxlength = "50" } })
                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Preco, new { @class = "form-label" })
                        <div class="input-group mb-3">
                            <span class="input-group-text">R$</span>
                            @Html.EditorFor(model => model.Preco, new { htmlAttributes = new { @class = "form-control", placeholder = "0,00", maxlength = "6" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Preco, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Descricao, new { @class = "form-label" })
                        @Html.TextAreaFor(model => model.Descricao, new { @class = "form-control", rows = "8", placeholder = "Descreva o produto", maxlength = "431" })
                        @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Ingredientes, new { @class = "form-label" })
                        @Html.TextAreaFor(model => model.Ingredientes, new { @class = "form-control", rows = "3", placeholder = "Ex: Alface, Tomate, Queijo...", maxlength = "150" })
                        @Html.ValidationMessageFor(model => model.Ingredientes, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.ImageUpload, new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.ImageUpload, new { @class = "form-control", type = "file", onchange = "UpdateImageInfo(this)" })
                        <small id="image-info" class="form-text text-muted">Deixe vazio para manter a imagem atual.</small>
                        @Html.ValidationMessageFor(model => model.ImageUpload, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Tipo, new { @class = "form-label" })
                        @Html.DropDownListFor(model => model.Tipo,
                            new List<SelectListItem>
                            {
                                new SelectListItem { Text = "Lanche", Value = "L" },
                                new SelectListItem { Text = "Bebida", Value = "B" },
                                new SelectListItem { Text = "Acompanhamento", Value = "A" }
                            }, null, new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <br />
                    <br />
                    <div class="d-grid gap-2">
                        <button type="submit" value="Save" class="btn btn-primary btn-lg">Salvar</button>
                    </div>
                }
                <div class="mt-3 text-center">
                    @Html.ActionLink("Voltar para Lista", "Index", null, new { @class = "btn btn-secondary" })
                </div>
            </div>
        </div>
    </div>
</section>
<script>
    $('#Preco').maskMoney({ allowNegative: false, thousands: '.', decimal: ',', affixesStay: false });

    function UpdateImageInfo(input) {
        const imgInfo = document.getElementById('image-info');

        if (input.files && input.files[0]) {
            imgInfo.hidden = true;
        } else {
            imgInfo.hidden = false;
        }
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
